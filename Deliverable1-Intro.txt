Introduction

There were a few difficulties in designing and running a test plan for this piece of software. Part of it stemmed from an inexperience in writing scripts to automatically run tests. Manually testing requirements like FUN-UNIQ-ROOM-FURNISHING become tedious if there are more than a few rooms and completely infeasible once there are a large number of rooms. Another difficulty arose in the sheer number of possibilities of errors. Missing cream when drinking may fail, but if coffee was forgotten, maybe it goes through due to programming errors. Maybe the programmer didn't use a built-in library for converting input to lower/upper case, so there's a possibility for the manually checked values to fall through the cracks. With a small range of inputs, this is testable, but for larger programs and more complex input, this becomes very difficult to test. 

There weren't so many edge cases as might be expected in this type of software, as there weren't really "ranges" of values to test. While some software might perform differently based on whether the user's age is less than or equal to 21, this software only has 6 allowable inputs, each of them performing a distinct operation. One example of a "range" of values within CoffeMaker was the inputs themselves. There are two distinct groups of values - accepted inputs and unknown inputs. The two groups don't overlap, as they are allowed values in a set, not a range of allowed values. Because of this, the edge cases are reduced to values that a programmer might not reasonably expect to be entered. 
