Test Cases


1. Identifier: Input N
   1. Preconditions: User is at any iteration
   2. Execution Steps: 
      1. Enter N
   3. Post conditions: If door exists, user is taken to next iteration. If door doesn’t exist, user does not move.
2. Identifier: Input S
   1. Preconditions: User is at any iteration
   2. Execution Steps:
      1. Enter S
   3. Post conditions: If door exists, user is taken to next iteration. If door doesn’t exist, user does not move.
3. Identifier: Input L
   1. Preconditions: User is at any iteration
   2. Execution Steps:
      1. Enter L
   3. Post conditions: System looks for an item
4. Identifier: Input I
   1. Preconditions: User is at any iteration
   2. Execution Steps:
      1. Enter I
   3. Post conditions: User’s inventory is shown
5. Identifier: Input D
   1. Preconditions: User is at any iteration
   2. Execution Steps:
      1. Enter D
   3. Post conditions: User drinks
6. Identifier: Input H
   1. Preconditions: User is at any iteration
   2. Execution Steps:
      1. Enter H
   3. Post conditions: Help menu is shown.
7. Identifier: Unknown Command
   1. Preconditions: User is at any iteration
   2. Execution Steps:
      1. Enter ?
   3. Post conditions: Output should be “What?”
8. Identifier: Case N
   1. Preconditions: User is at any iteration stage of the game. 
   2. Execution Steps:
      1. Enter n
      2. Enter N
   3. Post conditions: Output of both inputs should be the same
9. Identifier: Case S
   1. Preconditions: User is at any interation
   2. Execution Steps:
      1. Enter s
      2. Enter S
   3. Post conditions: Output of both inputs should be the same
10. Identifier: Case L
   1. Preconditions: User is at any interation
   2. Execution Steps:
      1. Enter l
      2. Enter L
   3. Post conditions: Output of both inputs should be the same
11. Identifier: Case D
   1. Preconditions: User is at any interation
   2. Execution Steps:
      1. Enter d
      2. Enter D
   3. Post conditions: Output of both inputs should be the same
12. Identifier: Case I
   1. Preconditions: User is at any interation
   2. Execution Steps:
      1. Enter i
      2. Enter I
   3. Post conditions: Output of both inputs should be the same
13. Identifier: Case H
   1. Preconditions: User is at any interation
   2. Execution Steps:
      1. Enter H
      2. Enter h
   3. Post conditions: Output of both inputs should be the same
14. Identifier: Move Exists
   1. Preconditions: User is in a room with a door on the north side
   2. Execution Steps: 
      1. Enter N
   3. Post conditions: User enters new room to the north.
15. Identifier: Move Doesn’t Exist
   1. Preconditions: User is in a room without a door on the north side
   2. Execution Steps: 
      1. Enter N
   3. Post conditions: User does not move
16. Identifier: Win
   1. Preconditions: User has obtained all items (sugar, cream, and coffee). 
   2. Execution Steps: 
      1. Enter D
   3. Post conditions: User receives message that they have won.
17. Identifier: Lose
   1. Preconditions: User has NOT obtained all items (sugar, cream, and coffee).
   2. Execution Steps:
      1. Enter D
   3. Post conditions: User receives message that they have lost.
18. Identifier: Inventory No Items
   1. Preconditions: User has not obtained any items
   2. Execution Steps:
      1. Enter I
   3. Post conditions: User receives message that no items are in their inventory.
19. Identifier: Inventory Some Items
   1. Preconditions: User has obtained some but not all items
   2. Execution Steps:
      1. Enter I
   3. Post conditions: User receives message listing the items they have obtained.
20. Identifier: Inventory All Items
   1. Preconditions: User has obtained all items
   2. Execution Steps:
      1. Enter I
   3. Post conditions: User receives message listing all the items they have obtained, plus a message that they have all          items. 
21. Identifier: Look No Item
   1. Preconditions: User is in a room with no items
   2. Execution Steps: 
      1. Enter L
   3. Post conditions: User does not receive a message that they found an item, and no new items will be in the inventory
22. Identifier: Look Item
   1. Preconditions: User is in a room with an item
   2. Execution Steps:
      1. Enter L
   3. Post conditions: User receives a message that they found an item and that item will be in their inventory
23. Identifier: Unique Room
   1. Preconditions: User has just entered the game
   2. Execution Steps: 
      1. On entering a room, including the first, enter L
      2. Record the adjective describing the room
      3. Enter a room
      4. If room is unexplored, go to 1. Otherwise, find an unexplored room
   3. Post conditions: Each room's adjective will be unique
24. Identifier: Unique Furnishing
   1. Preconditions: User has just entered the game
   2. Execution Steps:
      1. On entering a room, including the first, enter L
      2. Record the furniture within the room
      3. Enter a room
      4. If room is unexplored, go to 1. Otherwise, find an unexplored room
   3. Post conditions: Each room's furniture will be unique
25. Identifier: Single Furnishing
   1. Preconditions: User has just entered the game
   2. Execution Steps: 
      1. On entering a room, including the first, enter L
      2. Observe whether more than one piece of furniture is described
      3. Enter a room
      4. If room is unexplored, go to 1. Otherwise, find an unexplored room
   3. Post conditions: Each room shall have one and only one piece of furniture
